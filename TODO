TODO

- add an ethernet java class and pretty much paste the content of Frame into it
-Use the ByteUtil class in the ParseCaptureFile.java to remove any duplicate functions
-add the parameters from the user (follow TCP stream, ...)
-Make a package
-Separate the protocols from the other files (in another folder)
-modify the methods in ByteUtil to operate on the current value at the offset



MAYBE ?

-Rename LinkLayer to Frame ?
-Add an endianness value in ByteUtil?




DONE
-Add a 'toIPV4Address()' method to the ByteUtil class to return 4 bytes of data arranged to a IPv4 address (string)
-modify the toInt() and toShort() methods of ByteUtil to account for the signed-ness of the
	data types in Java !
-add a toLong() method in ByteUtil
-add a toMacAddress() method to the ByteUtil class to return 6 bytes of data arranger to a MAC addresse string 
-For the Protocol class and any class that extends it, introduce a function printing 
	the content of its data with a padding (for a better ~visual experience~), 
	keep the ToString but add another method
-Create a ProtocolName enum class to keep track of all the protocols
-Add the parameter 'frame' to keep only one frame
-Add the parameter 'filter' to keep only one protocol
-get rid of the padding (if any) at any layer that specifies it
